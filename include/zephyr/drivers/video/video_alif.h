/*
 * Copyright (C) 2024 Alif Semiconductor.
 * SPDX-License-Identifier: Apache-2.0
 */
#ifndef __ZEPHYR_INCLUDE_DRIVERS_ALIF_VIDEO_H__
#define __ZEPHYR_INCLUDE_DRIVERS_ALIF_VIDEO_H__

#include <zephyr/device.h>
#include <stddef.h>
#include <zephyr/types.h>

#ifdef __cplusplus
extern "C" {
#endif

#define VIDEO_CID_ALIF_CSI_DPHY_FREQ (VIDEO_CTRL_CLASS_VENDOR + 0)

enum csi2_data_type {
	/* Data Type Non-Image data */
	CSI2_DT_EMBEDDED = 0x12, /* Embedded 8-bit non-Image data */
	/* Data Type YUV */
	CSI2_DT_YUV420_8_BIT = 0x18,        /* YUV420 8-bit */
	CSI2_DT_YUV420_10_BIT = 0x19,       /* YUV420 10-bit */
	CSI2_DT_YUV420_LEGACY_8_BIT = 0x1A, /* YUV420 8-bit Legacy */
	CSI2_DT_YUV420_CSPS_8_BIT = 0x1C,   /* YUV420 8-bit CSPS */
	CSI2_DT_YUV420_CSPS_10_BIT = 0x1D,  /* YUV420 10-bit CSPS */
	CSI2_DT_YUV422_8_BIT = 0x1E,        /* YUV422 8-bit */
	CSI2_DT_YUV422_10_BIT = 0x1F,       /* YUV422 10-bit */
	/* Data Type RGB */
	CSI2_DT_RGB444 = 0x20, /* RGB444 */
	CSI2_DT_RGB555 = 0x21, /* RGB555 */
	CSI2_DT_RGB565 = 0x22, /* RGB565 */
	CSI2_DT_RGB666 = 0x23, /* RGB666 */
	CSI2_DT_RGB888 = 0x24, /* RGB888 */
	/* Data Type RAW */
	CSI2_DT_RAW6 = 0x28,  /* RAW6 */
	CSI2_DT_RAW7 = 0x29,  /* RAW7 */
	CSI2_DT_RAW8 = 0x2A,  /* RAW8 */
	CSI2_DT_RAW10 = 0x2B, /* RAW10 */
	CSI2_DT_RAW12 = 0x2C, /* RAW12 */
	CSI2_DT_RAW14 = 0x2D, /* RAW14 */
	CSI2_DT_RAW16 = 0x2E, /* RAW16 */
};

enum csi2_ipi_interface {
	CSI2_IPI_MODE_48_BIT_IFX,
	CSI2_IPI_MODE_16_BIT_IFX,
};

enum cpi_csi_color_mode {
	CPI_COLOR_MODE_CONFIG_IPI16_RAW6 = 0,
	CPI_COLOR_MODE_CONFIG_IPI16_RAW7,
	CPI_COLOR_MODE_CONFIG_IPI16_RAW8,
	CPI_COLOR_MODE_CONFIG_IPI16_RAW10,
	CPI_COLOR_MODE_CONFIG_IPI16_RAW12,
	CPI_COLOR_MODE_CONFIG_IPI16_RAW14,
	CPI_COLOR_MODE_CONFIG_IPI16_RAW16,
	CPI_COLOR_MODE_CONFIG_IPI48_RGB444,
	CPI_COLOR_MODE_CONFIG_IPI48_RGB555,
	CPI_COLOR_MODE_CONFIG_IPI48_RGB565,
	CPI_COLOR_MODE_CONFIG_IPI48_RGB666,
	CPI_COLOR_MODE_CONFIG_IPI48_XRGB888,
	CPI_COLOR_MODE_CONFIG_IPI48_RGBX888,
	CPI_COLOR_MODE_CONFIG_IPI48_RAW32,
	CPI_COLOR_MODE_CONFIG_IPI48_RAW48,
};

enum cpi_data_mode {
	CPI_DATA_MODE_1_BIT = 0,
	CPI_DATA_MODE_2_BIT,
	CPI_DATA_MODE_4_BIT,
	CPI_DATA_MODE_8_BIT,
	CPI_DATA_MODE_16_BIT,
	CPI_DATA_MODE_32_BIT,
	CPI_DATA_MODE_64_BIT,
};

struct cpi_csi2_mode_settings {
	enum csi2_data_type dt;
	enum csi2_ipi_interface ipi_ifx;
	enum cpi_csi_color_mode col_mode;
	enum cpi_data_mode data_mode;
	uint32_t bits_per_pixel;
};

static const struct cpi_csi2_mode_settings data_mode_settings[] = {
	{CSI2_DT_RAW6, CSI2_IPI_MODE_16_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI16_RAW6,
	 CPI_DATA_MODE_8_BIT, 6},
	{CSI2_DT_RAW7, CSI2_IPI_MODE_16_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI16_RAW7,
	 CPI_DATA_MODE_8_BIT, 7},
	{CSI2_DT_RAW8, CSI2_IPI_MODE_16_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI16_RAW8,
	 CPI_DATA_MODE_8_BIT, 8},
	{CSI2_DT_RAW10, CSI2_IPI_MODE_16_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI16_RAW10,
	 CPI_DATA_MODE_16_BIT, 10},
	{CSI2_DT_RAW12, CSI2_IPI_MODE_16_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI16_RAW12,
	 CPI_DATA_MODE_16_BIT, 12},
	{CSI2_DT_RAW14, CSI2_IPI_MODE_16_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI16_RAW14,
	 CPI_DATA_MODE_16_BIT, 14},
	{CSI2_DT_RAW16, CSI2_IPI_MODE_16_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI16_RAW16,
	 CPI_DATA_MODE_16_BIT, 16},
	{CSI2_DT_RGB444, CSI2_IPI_MODE_48_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI48_RGB444,
	 CPI_DATA_MODE_16_BIT, 12},
	{CSI2_DT_RGB555, CSI2_IPI_MODE_48_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI48_RGB555,
	 CPI_DATA_MODE_16_BIT, 15},
	{CSI2_DT_RGB565, CSI2_IPI_MODE_48_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI48_RGB565,
	 CPI_DATA_MODE_16_BIT, 16},
	{CSI2_DT_RGB666, CSI2_IPI_MODE_48_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI48_RGB666,
	 CPI_DATA_MODE_32_BIT, 18},
	{CSI2_DT_RGB888, CSI2_IPI_MODE_48_BIT_IFX, CPI_COLOR_MODE_CONFIG_IPI48_XRGB888,
	 CPI_DATA_MODE_32_BIT, 24},
};

#ifdef __cplusplus
}
#endif

#endif /* __ZEPHYR INCLUDE_DRIVERS_ALIF_VIDEO_H__ */
